package object ureact {

  object handlers {

    import ureact.event._

    def onCopy(cb: (ClipboardEvent) => Unit): TagMod = TagMod.AddProp("onCopy", cb)
    def onKeyUp(cb: (KeyboardEvent) => Unit): TagMod = TagMod.AddProp("onKeyUp", cb)
    def onCut(cb: (ClipboardEvent) => Unit): TagMod = TagMod.AddProp("onCut", cb)
    def onCanPlayThrough(cb: (MediaEvent) => Unit): TagMod = TagMod.AddProp("onCanPlayThrough", cb)
    def onDoubleClick(cb: (MouseEvent) => Unit): TagMod = TagMod.AddProp("onDoubleClick", cb)
    def onDragStart(cb: (MouseEvent) => Unit): TagMod = TagMod.AddProp("onDragStart", cb)
    def onEmptied(cb: (MediaEvent) => Unit): TagMod = TagMod.AddProp("onEmptied", cb)
    def onSubmit(cb: (FormEvent) => Unit): TagMod = TagMod.AddProp("onSubmit", cb)
    def onError(cb: (MediaEvent) => Unit): TagMod = TagMod.AddProp("onError", cb)
    def onErrorImg(cb: (ImageEvent) => Unit): TagMod = TagMod.AddProp("onError", cb)
    def onLoadedMetadata(cb: (MediaEvent) => Unit): TagMod = TagMod.AddProp("onLoadedMetadata", cb)
    def onMouseMove(cb: (MouseEvent) => Unit): TagMod = TagMod.AddProp("onMouseMove", cb)
    def onStalled(cb: (MediaEvent) => Unit): TagMod = TagMod.AddProp("onStalled", cb)
    def onPlay(cb: (MediaEvent) => Unit): TagMod = TagMod.AddProp("onPlay", cb)
    def onLoad(cb: (ImageEvent) => Unit): TagMod = TagMod.AddProp("onLoad", cb)
    def onDrop(cb: (MouseEvent) => Unit): TagMod = TagMod.AddProp("onDrop", cb)
    def nDoubleClick(cb: (MouseEvent) => Unit): TagMod = TagMod.AddProp("nDoubleClick", cb)
    def onDurationChange(cb: (MediaEvent) => Unit): TagMod = TagMod.AddProp("onDurationChange", cb)
    def onWaiting(cb: (MediaEvent) => Unit): TagMod = TagMod.AddProp("onWaiting", cb)
    def onBlur(cb: (FocusEvent) => Unit): TagMod = TagMod.AddProp("onBlur", cb)
    def onSuspend(cb: (MediaEvent) => Unit): TagMod = TagMod.AddProp("onSuspend", cb)
    def onAbort(cb: (MediaEvent) => Unit): TagMod = TagMod.AddProp("onAbort", cb)
    def onAnimationEnd(cb: (AnimationEvent) => Unit): TagMod = TagMod.AddProp("onAnimationEnd", cb)
    def onCompositionStart(cb: (CompositionEvent) => Unit): TagMod = TagMod.AddProp("onCompositionStart", cb)
    def onDrag(cb: (MouseEvent) => Unit): TagMod = TagMod.AddProp("onDrag", cb)
    def onMouseDown(cb: (MouseEvent) => Unit): TagMod = TagMod.AddProp("onMouseDown", cb)
    def onFocus(cb: (FocusEvent) => Unit): TagMod = TagMod.AddProp("onFocus", cb)
    def onTouchMove(cb: (TouchEvent) => Unit): TagMod = TagMod.AddProp("onTouchMove", cb)
    def onLoadStart(cb: (MediaEvent) => Unit): TagMod = TagMod.AddProp("onLoadStart", cb)
    def onDragLeave(cb: (MouseEvent) => Unit): TagMod = TagMod.AddProp("onDragLeave", cb)
    def onDragEnter(cb: (MouseEvent) => Unit): TagMod = TagMod.AddProp("onDragEnter", cb)
    def onClick(cb: (MouseEvent) => Unit): TagMod = TagMod.AddProp("onClick", cb)
    def onPause(cb: (MediaEvent) => Unit): TagMod = TagMod.AddProp("onPause", cb)
    def onContextMenu(cb: (MouseEvent) => Unit): TagMod = TagMod.AddProp("onContextMenu", cb)
    def onKeyDown(cb: (KeyboardEvent) => Unit): TagMod = TagMod.AddProp("onKeyDown", cb)
    def onLoadedData(cb: (MediaEvent) => Unit): TagMod = TagMod.AddProp("onLoadedData", cb)
    def onSelect(cb: (SelectionEvent) => Unit): TagMod = TagMod.AddProp("onSelect", cb)
    def onChange(cb: (FormEvent) => Unit): TagMod = TagMod.AddProp("onChange", cb)
    def onCompositionEnd(cb: (CompositionEvent) => Unit): TagMod = TagMod.AddProp("onCompositionEnd", cb)
    def onTouchCancel(cb: (TouchEvent) => Unit): TagMod = TagMod.AddProp("onTouchCancel", cb)
    def onVolumeChange(cb: (MediaEvent) => Unit): TagMod = TagMod.AddProp("onVolumeChange", cb)
    def onMouseOver(cb: (MouseEvent) => Unit): TagMod = TagMod.AddProp("onMouseOver", cb)
    def onPaste(cb: (ClipboardEvent) => Unit): TagMod = TagMod.AddProp("onPaste", cb)
    def onCanPlay(cb: (MediaEvent) => Unit): TagMod = TagMod.AddProp("onCanPlay", cb)
    def onCompositionUpdate(cb: (CompositionEvent) => Unit): TagMod = TagMod.AddProp("onCompositionUpdate", cb)
    def onAnimationStart(cb: (AnimationEvent) => Unit): TagMod = TagMod.AddProp("onAnimationStart", cb)
    def onDragOver(cb: (MouseEvent) => Unit): TagMod = TagMod.AddProp("onDragOver", cb)
    def onPlaying(cb: (MediaEvent) => Unit): TagMod = TagMod.AddProp("onPlaying", cb)
    def onDragEnd(cb: (MouseEvent) => Unit): TagMod = TagMod.AddProp("onDragEnd", cb)
    def onSeeking(cb: (MediaEvent) => Unit): TagMod = TagMod.AddProp("onSeeking", cb)
    def onEnded(cb: (MediaEvent) => Unit): TagMod = TagMod.AddProp("onEnded", cb)
    def onSeeked(cb: (MediaEvent) => Unit): TagMod = TagMod.AddProp("onSeeked", cb)
    def onTransitionEnd(cb: (TransitionEvent) => Unit): TagMod = TagMod.AddProp("onTransitionEnd", cb)
    def onAnimationIteration(cb: (AnimationEvent) => Unit): TagMod = TagMod.AddProp("onAnimationIteration", cb)
    def onRateChange(cb: (MediaEvent) => Unit): TagMod = TagMod.AddProp("onRateChange", cb)
    def onEncrypted(cb: (MediaEvent) => Unit): TagMod = TagMod.AddProp("onEncrypted", cb)
    def onKeyPress(cb: (KeyboardEvent) => Unit): TagMod = TagMod.AddProp("onKeyPress", cb)
    def onWheel(cb: (WheelEvent) => Unit): TagMod = TagMod.AddProp("onWheel", cb)
    def onInput(cb: (FormEvent) => Unit): TagMod = TagMod.AddProp("onInput", cb)
    def onTouchEnd(cb: (TouchEvent) => Unit): TagMod = TagMod.AddProp("onTouchEnd", cb)
    def onTimeUpdate(cb: (MediaEvent) => Unit): TagMod = TagMod.AddProp("onTimeUpdate", cb)
    def onMouseLeave(cb: (MouseEvent) => Unit): TagMod = TagMod.AddProp("onMouseLeave", cb)
    def onTouchStart(cb: (TouchEvent) => Unit): TagMod = TagMod.AddProp("onTouchStart", cb)
    def onProgress(cb: (MediaEvent) => Unit): TagMod = TagMod.AddProp("onProgress", cb)
    def onMouseOut(cb: (MouseEvent) => Unit): TagMod = TagMod.AddProp("onMouseOut", cb)
    def onScroll(cb: (UIEvent) => Unit): TagMod = TagMod.AddProp("onScroll", cb)
    def onMouseEnter(cb: (MouseEvent) => Unit): TagMod = TagMod.AddProp("onMouseEnter", cb)
    def onDragExit(cb: (MouseEvent) => Unit): TagMod = TagMod.AddProp("onDragExit", cb)
    def onMouseUp(cb: (MouseEvent) => Unit): TagMod = TagMod.AddProp("onMouseUp", cb)

  }

  private def makeFactory(tag: String)(mods: TagMod*): Element = {
    val args = internal.TagArguments.build(mods)
    React.createElement(tag, args.toPlainProps)
  }

  object html {

    def div(mods: TagMod*): Element = makeFactory("div")(mods:_*)
    def menu(mods: TagMod*): Element = makeFactory("menu")(mods:_*)
    def h5(mods: TagMod*): Element = makeFactory("h5")(mods:_*)
    def bdi(mods: TagMod*): Element = makeFactory("bdi")(mods:_*)
    def ul(mods: TagMod*): Element = makeFactory("ul")(mods:_*)
    def script(mods: TagMod*): Element = makeFactory("script")(mods:_*)
    def ruby(mods: TagMod*): Element = makeFactory("ruby")(mods:_*)
    def keygen(mods: TagMod*): Element = makeFactory("keygen")(mods:_*)
    def dialog(mods: TagMod*): Element = makeFactory("dialog")(mods:_*)
    def menuitem(mods: TagMod*): Element = makeFactory("menuitem")(mods:_*)
    def q(mods: TagMod*): Element = makeFactory("q")(mods:_*)
    def dl(mods: TagMod*): Element = makeFactory("dl")(mods:_*)
    def aside(mods: TagMod*): Element = makeFactory("aside")(mods:_*)
    def meter(mods: TagMod*): Element = makeFactory("meter")(mods:_*)
    def `object`(mods: TagMod*): Element = makeFactory("`")(mods:_*)
    def ol(mods: TagMod*): Element = makeFactory("ol")(mods:_*)
    def button(mods: TagMod*): Element = makeFactory("button")(mods:_*)
    def tbody(mods: TagMod*): Element = makeFactory("tbody")(mods:_*)
    def h2(mods: TagMod*): Element = makeFactory("h2")(mods:_*)
    def blockquote(mods: TagMod*): Element = makeFactory("blockquote")(mods:_*)
    def b(mods: TagMod*): Element = makeFactory("b")(mods:_*)
    def input(mods: TagMod*): Element = makeFactory("input")(mods:_*)
    def legend(mods: TagMod*): Element = makeFactory("legend")(mods:_*)
    def `var`(mods: TagMod*): Element = makeFactory("`")(mods:_*)
    def address(mods: TagMod*): Element = makeFactory("address")(mods:_*)
    def tr(mods: TagMod*): Element = makeFactory("tr")(mods:_*)
    def footer(mods: TagMod*): Element = makeFactory("footer")(mods:_*)
    def mark(mods: TagMod*): Element = makeFactory("mark")(mods:_*)
    def base(mods: TagMod*): Element = makeFactory("base")(mods:_*)
    def li(mods: TagMod*): Element = makeFactory("li")(mods:_*)
    def samp(mods: TagMod*): Element = makeFactory("samp")(mods:_*)
    def kbd(mods: TagMod*): Element = makeFactory("kbd")(mods:_*)
    def span(mods: TagMod*): Element = makeFactory("span")(mods:_*)
    def progress(mods: TagMod*): Element = makeFactory("progress")(mods:_*)
    def rt(mods: TagMod*): Element = makeFactory("rt")(mods:_*)
    def form(mods: TagMod*): Element = makeFactory("form")(mods:_*)
    def data(mods: TagMod*): Element = makeFactory("data")(mods:_*)
    def s(mods: TagMod*): Element = makeFactory("s")(mods:_*)
    def h4(mods: TagMod*): Element = makeFactory("h4")(mods:_*)
    def source(mods: TagMod*): Element = makeFactory("source")(mods:_*)
    def em(mods: TagMod*): Element = makeFactory("em")(mods:_*)
    def sub(mods: TagMod*): Element = makeFactory("sub")(mods:_*)
    def link(mods: TagMod*): Element = makeFactory("link")(mods:_*)
    def article(mods: TagMod*): Element = makeFactory("article")(mods:_*)
    def abbr(mods: TagMod*): Element = makeFactory("abbr")(mods:_*)
    def summary(mods: TagMod*): Element = makeFactory("summary")(mods:_*)
    def strong(mods: TagMod*): Element = makeFactory("strong")(mods:_*)
    def small(mods: TagMod*): Element = makeFactory("small")(mods:_*)
    def dt(mods: TagMod*): Element = makeFactory("dt")(mods:_*)
    def section(mods: TagMod*): Element = makeFactory("section")(mods:_*)
    def details(mods: TagMod*): Element = makeFactory("details")(mods:_*)
    def p(mods: TagMod*): Element = makeFactory("p")(mods:_*)
    def a(mods: TagMod*): Element = makeFactory("a")(mods:_*)
    def h1(mods: TagMod*): Element = makeFactory("h1")(mods:_*)
    def main(mods: TagMod*): Element = makeFactory("main")(mods:_*)
    def body(mods: TagMod*): Element = makeFactory("body")(mods:_*)
    def pre(mods: TagMod*): Element = makeFactory("pre")(mods:_*)
    def meta(mods: TagMod*): Element = makeFactory("meta")(mods:_*)
    def wbr(mods: TagMod*): Element = makeFactory("wbr")(mods:_*)
    def hgroup(mods: TagMod*): Element = makeFactory("hgroup")(mods:_*)
    def ins(mods: TagMod*): Element = makeFactory("ins")(mods:_*)
    def col(mods: TagMod*): Element = makeFactory("col")(mods:_*)
    def header(mods: TagMod*): Element = makeFactory("header")(mods:_*)
    def select(mods: TagMod*): Element = makeFactory("select")(mods:_*)
    def code(mods: TagMod*): Element = makeFactory("code")(mods:_*)
    def thead(mods: TagMod*): Element = makeFactory("thead")(mods:_*)
    def area(mods: TagMod*): Element = makeFactory("area")(mods:_*)
    def embed(mods: TagMod*): Element = makeFactory("embed")(mods:_*)
    def colgroup(mods: TagMod*): Element = makeFactory("colgroup")(mods:_*)
    def th(mods: TagMod*): Element = makeFactory("th")(mods:_*)
    def title(mods: TagMod*): Element = makeFactory("title")(mods:_*)
    def textarea(mods: TagMod*): Element = makeFactory("textarea")(mods:_*)
    def audio(mods: TagMod*): Element = makeFactory("audio")(mods:_*)
    def tfoot(mods: TagMod*): Element = makeFactory("tfoot")(mods:_*)
    def rp(mods: TagMod*): Element = makeFactory("rp")(mods:_*)
    def video(mods: TagMod*): Element = makeFactory("video")(mods:_*)
    def param(mods: TagMod*): Element = makeFactory("param")(mods:_*)
    def nav(mods: TagMod*): Element = makeFactory("nav")(mods:_*)
    def iframe(mods: TagMod*): Element = makeFactory("iframe")(mods:_*)
    def i(mods: TagMod*): Element = makeFactory("i")(mods:_*)
    def sup(mods: TagMod*): Element = makeFactory("sup")(mods:_*)
    def h3(mods: TagMod*): Element = makeFactory("h3")(mods:_*)
    def hr(mods: TagMod*): Element = makeFactory("hr")(mods:_*)
    def noscript(mods: TagMod*): Element = makeFactory("noscript")(mods:_*)
    def output(mods: TagMod*): Element = makeFactory("output")(mods:_*)
    def html(mods: TagMod*): Element = makeFactory("html")(mods:_*)
    def time(mods: TagMod*): Element = makeFactory("time")(mods:_*)
    def u(mods: TagMod*): Element = makeFactory("u")(mods:_*)
    def br(mods: TagMod*): Element = makeFactory("br")(mods:_*)
    def h6(mods: TagMod*): Element = makeFactory("h6")(mods:_*)
    def label(mods: TagMod*): Element = makeFactory("label")(mods:_*)
    def big(mods: TagMod*): Element = makeFactory("big")(mods:_*)
    def del(mods: TagMod*): Element = makeFactory("del")(mods:_*)
    def track(mods: TagMod*): Element = makeFactory("track")(mods:_*)
    def table(mods: TagMod*): Element = makeFactory("table")(mods:_*)
    def figure(mods: TagMod*): Element = makeFactory("figure")(mods:_*)
    def picture(mods: TagMod*): Element = makeFactory("picture")(mods:_*)
    def canvas(mods: TagMod*): Element = makeFactory("canvas")(mods:_*)
    def cite(mods: TagMod*): Element = makeFactory("cite")(mods:_*)
    def caption(mods: TagMod*): Element = makeFactory("caption")(mods:_*)
    def figcaption(mods: TagMod*): Element = makeFactory("figcaption")(mods:_*)
    def dd(mods: TagMod*): Element = makeFactory("dd")(mods:_*)
    def bdo(mods: TagMod*): Element = makeFactory("bdo")(mods:_*)
    def optgroup(mods: TagMod*): Element = makeFactory("optgroup")(mods:_*)
    def fieldset(mods: TagMod*): Element = makeFactory("fieldset")(mods:_*)
    def datalist(mods: TagMod*): Element = makeFactory("datalist")(mods:_*)
    def img(mods: TagMod*): Element = makeFactory("img")(mods:_*)
    def option(mods: TagMod*): Element = makeFactory("option")(mods:_*)
    def style(mods: TagMod*): Element = makeFactory("style")(mods:_*)
    def td(mods: TagMod*): Element = makeFactory("td")(mods:_*)
    def dfn(mods: TagMod*): Element = makeFactory("dfn")(mods:_*)
    def map(mods: TagMod*): Element = makeFactory("map")(mods:_*)
    def head(mods: TagMod*): Element = makeFactory("head")(mods:_*)

    object attr {

      private def existenceTagMod(name: String, value: Boolean): TagMod =
        if (value)
          TagMod.AddProp(name, name)
        else
          TagMod.NoOp

      def data(name: String)(value: String): TagMod =
        TagMod.AddProp("data-" + name, value)
      def aria(name: String)(value: String): TagMod =
        TagMod.AddProp("data-" + name, value)

      // boolean valued attrs (present or absent)
      def allowFullScreen(value: Boolean): TagMod = existenceTagMod("allowFullScreen", value)
      def allowTransparency(value: Boolean): TagMod = existenceTagMod("allowTransparency", value)
      def async(value: Boolean): TagMod = existenceTagMod("async", value)
      def autoCapitalize(value: Boolean): TagMod = existenceTagMod("autoCapitalize", value)
      def autoComplete(value: Boolean): TagMod = existenceTagMod("autoComplete", value)
      def autoCorrect(value: Boolean): TagMod = existenceTagMod("autoCorrect", value)
      def autoFocus(value: Boolean): TagMod = existenceTagMod("autoFocus", value)
      def autoPlay(value: Boolean): TagMod = existenceTagMod("autoPlay", value)
      def autoSave(value: Boolean): TagMod = existenceTagMod("autoSave", value)
      def capture(value: Boolean): TagMod = existenceTagMod("capture", value)
      def checked(value: Boolean): TagMod = existenceTagMod("checked", value)
      def contentEditable(value: Boolean): TagMod = existenceTagMod("contentEditable", value)
      def controls(value: Boolean): TagMod = existenceTagMod("controls", value)
      def defaultChecked(value: Boolean): TagMod = existenceTagMod("defaultChecked", value)
      def defer(value: Boolean): TagMod = existenceTagMod("defer", value)
      def disabled(value: Boolean): TagMod = existenceTagMod("disabled", value)
      def formNoValidate(value: Boolean): TagMod = existenceTagMod("formNoValidate", value)
      def hidden(value: Boolean): TagMod = existenceTagMod("hidden", value)
      def multiple(value: Boolean): TagMod = existenceTagMod("multiple", value)
      def muted(value: Boolean): TagMod = existenceTagMod("muted", value)
      def noValidate(value: Boolean): TagMod = existenceTagMod("noValidate", value)
      def readOnly(value: Boolean): TagMod = existenceTagMod("readOnly", value)
      def required(value: Boolean): TagMod = existenceTagMod("required", value)
      def reversed(value: Boolean): TagMod = existenceTagMod("reversed", value)
      def scoped(value: Boolean): TagMod = existenceTagMod("scoped", value)
      def seamless(value: Boolean): TagMod = existenceTagMod("seamless", value)
      def selected(value: Boolean): TagMod = existenceTagMod("selected", value)

      // "true" and "false" attributes
      def spellCheck(value: Boolean): TagMod = TagMod.AddProp("spellCheck",
        if (value) "true" else "false"
      )
      def draggable(value: Boolean): TagMod = TagMod.AddProp("draggable",
        if (value) "true" else "false"
      )

      // "Freeform" attributes
      def `class`(value: String): TagMod = TagMod.AddClass(value)
      def `for`(value: String): TagMod = TagMod.AddProp("htmlFor", value)
      def `type`(value: String): TagMod = TagMod.AddProp("type", value)
      def about(value: String): TagMod = TagMod.AddProp("about", value)
      def accept(value: String): TagMod = TagMod.AddProp("accept", value)
      def acceptCharset(value: String): TagMod = TagMod.AddProp("acceptCharset", value)
      def accessKey(value: String): TagMod = TagMod.AddProp("accessKey", value)
      def action(value: String): TagMod = TagMod.AddProp("action", value)
      def alt(value: String): TagMod = TagMod.AddProp("alt", value)
      def cellPadding(value: String): TagMod = TagMod.AddProp("cellPadding", value)
      def cellSpacing(value: String): TagMod = TagMod.AddProp("cellSpacing", value)
      def challenge(value: String): TagMod = TagMod.AddProp("challenge", value)
      def charSet(value: String): TagMod = TagMod.AddProp("charSet", value)
      def cite(value: String): TagMod = TagMod.AddProp("cite", value)
      def classID(value: String): TagMod = TagMod.AddProp("classID", value)
      def colSpan(value: String): TagMod = TagMod.AddProp("colSpan", value)
      def color(value: String): TagMod = TagMod.AddProp("color", value)
      def cols(value: String): TagMod = TagMod.AddProp("cols", value)
      def content(value: String): TagMod = TagMod.AddProp("content", value)
      def contextMenu(value: String): TagMod = TagMod.AddProp("contextMenu", value)
      def coords(value: String): TagMod = TagMod.AddProp("coords", value)
      def crossOrigin(value: String): TagMod = TagMod.AddProp("crossOrigin", value)
      def data(value: String): TagMod = TagMod.AddProp("data", value)
      def datatype(value: String): TagMod = TagMod.AddProp("datatype", value)
      def dateTime(value: String): TagMod = TagMod.AddProp("dateTime", value)
      def default(value: String): TagMod = TagMod.AddProp("default", value)
      def dir(value: String): TagMod = TagMod.AddProp("dir", value)
      def download(value: String): TagMod = TagMod.AddProp("download", value)
      def encType(value: String): TagMod = TagMod.AddProp("encType", value)
      def form(value: String): TagMod = TagMod.AddProp("form", value)
      def formAction(value: String): TagMod = TagMod.AddProp("formAction", value)
      def formEncType(value: String): TagMod = TagMod.AddProp("formEncType", value)
      def formMethod(value: String): TagMod = TagMod.AddProp("formMethod", value)
      def formTarget(value: String): TagMod = TagMod.AddProp("formTarget", value)
      def frameBorder(value: String): TagMod = TagMod.AddProp("frameBorder", value)
      def headers(value: String): TagMod = TagMod.AddProp("headers", value)
      def height(value: String): TagMod = TagMod.AddProp("height", value)
      def high(value: String): TagMod = TagMod.AddProp("high", value)
      def href(value: String): TagMod = TagMod.AddProp("href", value)
      def hrefLang(value: String): TagMod = TagMod.AddProp("hrefLang", value)
      def htmlFor(value: String): TagMod = TagMod.AddProp("htmlFor", value)
      def httpEquiv(value: String): TagMod = TagMod.AddProp("httpEquiv", value)
      def icon(value: String): TagMod = TagMod.AddProp("icon", value)
      def id(value: String): TagMod = TagMod.AddProp("id", value)
      def inlist(value: String): TagMod = TagMod.AddProp("inlist", value)
      def inputTagMode(value: String): TagMod = TagMod.AddProp("inputTagMode", value)
      def integrity(value: String): TagMod = TagMod.AddProp("integrity", value)
      def is(value: String): TagMod = TagMod.AddProp("is", value)
      def itemID(value: String): TagMod = TagMod.AddProp("itemID", value)
      def itemProp(value: String): TagMod = TagMod.AddProp("itemProp", value)
      def itemRef(value: String): TagMod = TagMod.AddProp("itemRef", value)
      def itemScope(value: String): TagMod = TagMod.AddProp("itemScope", value)
      def itemType(value: String): TagMod = TagMod.AddProp("itemType", value)
      def keyParams(value: String): TagMod = TagMod.AddProp("keyParams", value)
      def keyType(value: String): TagMod = TagMod.AddProp("keyType", value)
      def kind(value: String): TagMod = TagMod.AddProp("kind", value)
      def label(value: String): TagMod = TagMod.AddProp("label", value)
      def lang(value: String): TagMod = TagMod.AddProp("lang", value)
      def list(value: String): TagMod = TagMod.AddProp("list", value)
      def loop(value: String): TagMod = TagMod.AddProp("loop", value)
      def low(value: String): TagMod = TagMod.AddProp("low", value)
      def manifest(value: String): TagMod = TagMod.AddProp("manifest", value)
      def marginHeight(value: String): TagMod = TagMod.AddProp("marginHeight", value)
      def marginWidth(value: String): TagMod = TagMod.AddProp("marginWidth", value)
      def max(value: String): TagMod = TagMod.AddProp("max", value)
      def maxLength(value: String): TagMod = TagMod.AddProp("maxLength", value)
      def media(value: String): TagMod = TagMod.AddProp("media", value)
      def mediaGroup(value: String): TagMod = TagMod.AddProp("mediaGroup", value)
      def method(value: String): TagMod = TagMod.AddProp("method", value)
      def min(value: String): TagMod = TagMod.AddProp("min", value)
      def minLength(value: String): TagMod = TagMod.AddProp("minLength", value)
      def name(value: String): TagMod = TagMod.AddProp("name", value)
      def nonce(value: String): TagMod = TagMod.AddProp("nonce", value)
      def open(value: String): TagMod = TagMod.AddProp("open", value)
      def optimum(value: String): TagMod = TagMod.AddProp("optimum", value)
      def pattern(value: String): TagMod = TagMod.AddProp("pattern", value)
      def placeholder(value: String): TagMod = TagMod.AddProp("placeholder", value)
      def poster(value: String): TagMod = TagMod.AddProp("poster", value)
      def prefix(value: String): TagMod = TagMod.AddProp("prefix", value)
      def preload(value: String): TagMod = TagMod.AddProp("preload", value)
      def profile(value: String): TagMod = TagMod.AddProp("profile", value)
      def property(value: String): TagMod = TagMod.AddProp("property", value)
      def radioGroup(value: String): TagMod = TagMod.AddProp("radioGroup", value)
      def rel(value: String): TagMod = TagMod.AddProp("rel", value)
      def resource(value: String): TagMod = TagMod.AddProp("resource", value)
      def results(value: String): TagMod = TagMod.AddProp("results", value)
      def role(value: String): TagMod = TagMod.AddProp("role", value)
      def rowSpan(value: String): TagMod = TagMod.AddProp("rowSpan", value)
      def rows(value: String): TagMod = TagMod.AddProp("rows", value)
      def sandbox(value: String): TagMod = TagMod.AddProp("sandbox", value)
      def scope(value: String): TagMod = TagMod.AddProp("scope", value)
      def security(value: String): TagMod = TagMod.AddProp("security", value)
      def shape(value: String): TagMod = TagMod.AddProp("shape", value)
      def size(value: String): TagMod = TagMod.AddProp("size", value)
      def sizes(value: String): TagMod = TagMod.AddProp("sizes", value)
      def span(value: String): TagMod = TagMod.AddProp("span", value)
      def src(value: String): TagMod = TagMod.AddProp("src", value)
      def srcDoc(value: String): TagMod = TagMod.AddProp("srcDoc", value)
      def srcLang(value: String): TagMod = TagMod.AddProp("srcLang", value)
      def srcSet(value: String): TagMod = TagMod.AddProp("srcSet", value)
      def start(value: String): TagMod = TagMod.AddProp("start", value)
      def step(value: String): TagMod = TagMod.AddProp("step", value)
      def summary(value: String): TagMod = TagMod.AddProp("summary", value)
      def tabIndex(value: String): TagMod = TagMod.AddProp("tabIndex", value)
      def target(value: String): TagMod = TagMod.AddProp("target", value)
      def title(value: String): TagMod = TagMod.AddProp("title", value)
      def typeof(value: String): TagMod = TagMod.AddProp("typeof", value)
      def useMap(value: String): TagMod = TagMod.AddProp("useMap", value)
      def value(value: String): TagMod = TagMod.AddProp("value", value)
      def defaultValue(value: String): TagMod = TagMod.AddProp("defaultValue", value)
      def vocab(value: String): TagMod = TagMod.AddProp("vocab", value)
      def width(value: String): TagMod = TagMod.AddProp("width", value)
      def wmode(value: String): TagMod = TagMod.AddProp("wmode", value)
      def wrap(value: String): TagMod = TagMod.AddProp("wrap", value)
    }

  }

  object svg {

    def text(mods: TagMod*): Element = makeFactory("text")(mods:_*)
    def circle(mods: TagMod*): Element = makeFactory("circle")(mods:_*)
    def stop(mods: TagMod*): Element = makeFactory("stop")(mods:_*)
    def defs(mods: TagMod*): Element = makeFactory("defs")(mods:_*)
    def svg(mods: TagMod*): Element = makeFactory("svg")(mods:_*)
    def radialGradient(mods: TagMod*): Element = makeFactory("radialGradient")(mods:_*)
    def pattern(mods: TagMod*): Element = makeFactory("pattern")(mods:_*)
    def clipPath(mods: TagMod*): Element = makeFactory("clipPath")(mods:_*)
    def g(mods: TagMod*): Element = makeFactory("g")(mods:_*)
    def line(mods: TagMod*): Element = makeFactory("line")(mods:_*)
    def linearGradient(mods: TagMod*): Element = makeFactory("linearGradient")(mods:_*)
    def polyline(mods: TagMod*): Element = makeFactory("polyline")(mods:_*)
    def rect(mods: TagMod*): Element = makeFactory("rect")(mods:_*)
    def mask(mods: TagMod*): Element = makeFactory("mask")(mods:_*)
    def polygon(mods: TagMod*): Element = makeFactory("polygon")(mods:_*)
    def image(mods: TagMod*): Element = makeFactory("image")(mods:_*)
    def path(mods: TagMod*): Element = makeFactory("path")(mods:_*)
    def tspan(mods: TagMod*): Element = makeFactory("tspan")(mods:_*)
    def ellipse(mods: TagMod*): Element = makeFactory("ellipse")(mods:_*)

    object attr {

      def accentHeight(value: String): TagMod = TagMod.AddProp("accentHeight", value)
      def accumulate(value: String): TagMod = TagMod.AddProp("accumulate", value)
      def additive(value: String): TagMod = TagMod.AddProp("additive", value)
      def alignmentBaseline(value: String): TagMod = TagMod.AddProp("alignmentBaseline", value)
      def allowReorder(value: String): TagMod = TagMod.AddProp("allowReorder", value)
      def alphabetic(value: String): TagMod = TagMod.AddProp("alphabetic", value)
      def amplitude(value: String): TagMod = TagMod.AddProp("amplitude", value)
      def arabicForm(value: String): TagMod = TagMod.AddProp("arabicForm", value)
      def ascent(value: String): TagMod = TagMod.AddProp("ascent", value)
      def attributeName(value: String): TagMod = TagMod.AddProp("attributeName", value)
      def attributeType(value: String): TagMod = TagMod.AddProp("attributeType", value)
      def autoReverse(value: String): TagMod = TagMod.AddProp("autoReverse", value)
      def azimuth(value: String): TagMod = TagMod.AddProp("azimuth", value)
      def baseFrequency(value: String): TagMod = TagMod.AddProp("baseFrequency", value)
      def baseProfile(value: String): TagMod = TagMod.AddProp("baseProfile", value)
      def baselineShift(value: String): TagMod = TagMod.AddProp("baselineShift", value)
      def bbox(value: String): TagMod = TagMod.AddProp("bbox", value)
      def begin(value: String): TagMod = TagMod.AddProp("begin", value)
      def bias(value: String): TagMod = TagMod.AddProp("bias", value)
      def by(value: String): TagMod = TagMod.AddProp("by", value)
      def calcTagMode(value: String): TagMod = TagMod.AddProp("calcTagMode", value)
      def capHeight(value: String): TagMod = TagMod.AddProp("capHeight", value)
      def clip(value: String): TagMod = TagMod.AddProp("clip", value)
      def clipPath(value: String): TagMod = TagMod.AddProp("clipPath", value)
      def clipPathUnits(value: String): TagMod = TagMod.AddProp("clipPathUnits", value)
      def clipRule(value: String): TagMod = TagMod.AddProp("clipRule", value)
      def colorInterpolation(value: String): TagMod = TagMod.AddProp("colorInterpolation", value)
      def colorInterpolationFilters(value: String): TagMod = TagMod.AddProp("colorInterpolationFilters", value)
      def colorProfile(value: String): TagMod = TagMod.AddProp("colorProfile", value)
      def colorRendering(value: String): TagMod = TagMod.AddProp("colorRendering", value)
      def contentScriptType(value: String): TagMod = TagMod.AddProp("contentScriptType", value)
      def contentStyleType(value: String): TagMod = TagMod.AddProp("contentStyleType", value)
      def cursor(value: String): TagMod = TagMod.AddProp("cursor", value)
      def cx(value: String): TagMod = TagMod.AddProp("cx", value)
      def cy(value: String): TagMod = TagMod.AddProp("cy", value)
      def d(value: String): TagMod = TagMod.AddProp("d", value)
      def decelerate(value: String): TagMod = TagMod.AddProp("decelerate", value)
      def descent(value: String): TagMod = TagMod.AddProp("descent", value)
      def diffuseConstant(value: String): TagMod = TagMod.AddProp("diffuseConstant", value)
      def direction(value: String): TagMod = TagMod.AddProp("direction", value)
      def display(value: String): TagMod = TagMod.AddProp("display", value)
      def divisor(value: String): TagMod = TagMod.AddProp("divisor", value)
      def dominantBaseline(value: String): TagMod = TagMod.AddProp("dominantBaseline", value)
      def dur(value: String): TagMod = TagMod.AddProp("dur", value)
      def dx(value: String): TagMod = TagMod.AddProp("dx", value)
      def dy(value: String): TagMod = TagMod.AddProp("dy", value)
      def edgeTagMode(value: String): TagMod = TagMod.AddProp("edgeTagMode", value)
      def elevation(value: String): TagMod = TagMod.AddProp("elevation", value)
      def enableBackground(value: String): TagMod = TagMod.AddProp("enableBackground", value)
      def end(value: String): TagMod = TagMod.AddProp("end", value)
      def exponent(value: String): TagMod = TagMod.AddProp("exponent", value)
      def externalResourcesRequired(value: String): TagMod = TagMod.AddProp("externalResourcesRequired", value)
      def fill(value: String): TagMod = TagMod.AddProp("fill", value)
      def fillOpacity(value: String): TagMod = TagMod.AddProp("fillOpacity", value)
      def fillRule(value: String): TagMod = TagMod.AddProp("fillRule", value)
      def filter(value: String): TagMod = TagMod.AddProp("filter", value)
      def filterRes(value: String): TagMod = TagMod.AddProp("filterRes", value)
      def filterUnits(value: String): TagMod = TagMod.AddProp("filterUnits", value)
      def floodColor(value: String): TagMod = TagMod.AddProp("floodColor", value)
      def floodOpacity(value: String): TagMod = TagMod.AddProp("floodOpacity", value)
      def focusable(value: String): TagMod = TagMod.AddProp("focusable", value)
      def fontFamily(value: String): TagMod = TagMod.AddProp("fontFamily", value)
      def fontSize(value: String): TagMod = TagMod.AddProp("fontSize", value)
      def fontSizeAdjust(value: String): TagMod = TagMod.AddProp("fontSizeAdjust", value)
      def fontStretch(value: String): TagMod = TagMod.AddProp("fontStretch", value)
      def fontStyle(value: String): TagMod = TagMod.AddProp("fontStyle", value)
      def fontVariant(value: String): TagMod = TagMod.AddProp("fontVariant", value)
      def fontWeight(value: String): TagMod = TagMod.AddProp("fontWeight", value)
      def format(value: String): TagMod = TagMod.AddProp("format", value)
      def from(value: String): TagMod = TagMod.AddProp("from", value)
      def fx(value: String): TagMod = TagMod.AddProp("fx", value)
      def fy(value: String): TagMod = TagMod.AddProp("fy", value)
      def g1(value: String): TagMod = TagMod.AddProp("g1", value)
      def g2(value: String): TagMod = TagMod.AddProp("g2", value)
      def glyphName(value: String): TagMod = TagMod.AddProp("glyphName", value)
      def glyphOrientationHorizontal(value: String): TagMod = TagMod.AddProp("glyphOrientationHorizontal", value)
      def glyphOrientationVertical(value: String): TagMod = TagMod.AddProp("glyphOrientationVertical", value)
      def glyphRef(value: String): TagMod = TagMod.AddProp("glyphRef", value)
      def gradientTransform(value: String): TagMod = TagMod.AddProp("gradientTransform", value)
      def gradientUnits(value: String): TagMod = TagMod.AddProp("gradientUnits", value)
      def hanging(value: String): TagMod = TagMod.AddProp("hanging", value)
      def horizAdvX(value: String): TagMod = TagMod.AddProp("horizAdvX", value)
      def horizOriginX(value: String): TagMod = TagMod.AddProp("horizOriginX", value)
      def ideographic(value: String): TagMod = TagMod.AddProp("ideographic", value)
      def imageRendering(value: String): TagMod = TagMod.AddProp("imageRendering", value)
      def in(value: String): TagMod = TagMod.AddProp("in", value)
      def in2(value: String): TagMod = TagMod.AddProp("in2", value)
      def intercept(value: String): TagMod = TagMod.AddProp("intercept", value)
      def k(value: String): TagMod = TagMod.AddProp("k", value)
      def k1(value: String): TagMod = TagMod.AddProp("k1", value)
      def k2(value: String): TagMod = TagMod.AddProp("k2", value)
      def k3(value: String): TagMod = TagMod.AddProp("k3", value)
      def k4(value: String): TagMod = TagMod.AddProp("k4", value)
      def kernelMatrix(value: String): TagMod = TagMod.AddProp("kernelMatrix", value)
      def kernelUnitLength(value: String): TagMod = TagMod.AddProp("kernelUnitLength", value)
      def kerning(value: String): TagMod = TagMod.AddProp("kerning", value)
      def keyPoints(value: String): TagMod = TagMod.AddProp("keyPoints", value)
      def keySplines(value: String): TagMod = TagMod.AddProp("keySplines", value)
      def keyTimes(value: String): TagMod = TagMod.AddProp("keyTimes", value)
      def lengthAdjust(value: String): TagMod = TagMod.AddProp("lengthAdjust", value)
      def letterSpacing(value: String): TagMod = TagMod.AddProp("letterSpacing", value)
      def lightingColor(value: String): TagMod = TagMod.AddProp("lightingColor", value)
      def limitingConeAngle(value: String): TagMod = TagMod.AddProp("limitingConeAngle", value)
      def local(value: String): TagMod = TagMod.AddProp("local", value)
      def markerEnd(value: String): TagMod = TagMod.AddProp("markerEnd", value)
      def markerHeight(value: String): TagMod = TagMod.AddProp("markerHeight", value)
      def markerMid(value: String): TagMod = TagMod.AddProp("markerMid", value)
      def markerStart(value: String): TagMod = TagMod.AddProp("markerStart", value)
      def markerUnits(value: String): TagMod = TagMod.AddProp("markerUnits", value)
      def markerWidth(value: String): TagMod = TagMod.AddProp("markerWidth", value)
      def mask(value: String): TagMod = TagMod.AddProp("mask", value)
      def maskContentUnits(value: String): TagMod = TagMod.AddProp("maskContentUnits", value)
      def maskUnits(value: String): TagMod = TagMod.AddProp("maskUnits", value)
      def mathematical(value: String): TagMod = TagMod.AddProp("mathematical", value)
      def mode(value: String): TagMod = TagMod.AddProp("mode", value)
      def numOctaves(value: String): TagMod = TagMod.AddProp("numOctaves", value)
      def offset(value: String): TagMod = TagMod.AddProp("offset", value)
      def opacity(value: String): TagMod = TagMod.AddProp("opacity", value)
      def operator(value: String): TagMod = TagMod.AddProp("operator", value)
      def order(value: String): TagMod = TagMod.AddProp("order", value)
      def orient(value: String): TagMod = TagMod.AddProp("orient", value)
      def orientation(value: String): TagMod = TagMod.AddProp("orientation", value)
      def origin(value: String): TagMod = TagMod.AddProp("origin", value)
      def overflow(value: String): TagMod = TagMod.AddProp("overflow", value)
      def overlinePosition(value: String): TagMod = TagMod.AddProp("overlinePosition", value)
      def overlineThickness(value: String): TagMod = TagMod.AddProp("overlineThickness", value)
      def paintOrder(value: String): TagMod = TagMod.AddProp("paintOrder", value)
      def panose1(value: String): TagMod = TagMod.AddProp("panose1", value)
      def pathLength(value: String): TagMod = TagMod.AddProp("pathLength", value)
      def patternContentUnits(value: String): TagMod = TagMod.AddProp("patternContentUnits", value)
      def patternTransform(value: String): TagMod = TagMod.AddProp("patternTransform", value)
      def patternUnits(value: String): TagMod = TagMod.AddProp("patternUnits", value)
      def pointerEvents(value: String): TagMod = TagMod.AddProp("pointerEvents", value)
      def points(value: String): TagMod = TagMod.AddProp("points", value)
      def pointsAtX(value: String): TagMod = TagMod.AddProp("pointsAtX", value)
      def pointsAtY(value: String): TagMod = TagMod.AddProp("pointsAtY", value)
      def pointsAtZ(value: String): TagMod = TagMod.AddProp("pointsAtZ", value)
      def preserveAlpha(value: String): TagMod = TagMod.AddProp("preserveAlpha", value)
      def preserveAspectRatio(value: String): TagMod = TagMod.AddProp("preserveAspectRatio", value)
      def primitiveUnits(value: String): TagMod = TagMod.AddProp("primitiveUnits", value)
      def r(value: String): TagMod = TagMod.AddProp("r", value)
      def radius(value: String): TagMod = TagMod.AddProp("radius", value)
      def refX(value: String): TagMod = TagMod.AddProp("refX", value)
      def refY(value: String): TagMod = TagMod.AddProp("refY", value)
      def renderingIntent(value: String): TagMod = TagMod.AddProp("renderingIntent", value)
      def repeatCount(value: String): TagMod = TagMod.AddProp("repeatCount", value)
      def repeatDur(value: String): TagMod = TagMod.AddProp("repeatDur", value)
      def requiredExtensions(value: String): TagMod = TagMod.AddProp("requiredExtensions", value)
      def requiredFeatures(value: String): TagMod = TagMod.AddProp("requiredFeatures", value)
      def restart(value: String): TagMod = TagMod.AddProp("restart", value)
      def result(value: String): TagMod = TagMod.AddProp("result", value)
      def rotate(value: String): TagMod = TagMod.AddProp("rotate", value)
      def rx(value: String): TagMod = TagMod.AddProp("rx", value)
      def ry(value: String): TagMod = TagMod.AddProp("ry", value)
      def scale(value: String): TagMod = TagMod.AddProp("scale", value)
      def seed(value: String): TagMod = TagMod.AddProp("seed", value)
      def shapeRendering(value: String): TagMod = TagMod.AddProp("shapeRendering", value)
      def slope(value: String): TagMod = TagMod.AddProp("slope", value)
      def spacing(value: String): TagMod = TagMod.AddProp("spacing", value)
      def specularConstant(value: String): TagMod = TagMod.AddProp("specularConstant", value)
      def specularExponent(value: String): TagMod = TagMod.AddProp("specularExponent", value)
      def speed(value: String): TagMod = TagMod.AddProp("speed", value)
      def spreadMethod(value: String): TagMod = TagMod.AddProp("spreadMethod", value)
      def startOffset(value: String): TagMod = TagMod.AddProp("startOffset", value)
      def stdDeviation(value: String): TagMod = TagMod.AddProp("stdDeviation", value)
      def stemh(value: String): TagMod = TagMod.AddProp("stemh", value)
      def stemv(value: String): TagMod = TagMod.AddProp("stemv", value)
      def stitchTiles(value: String): TagMod = TagMod.AddProp("stitchTiles", value)
      def stopColor(value: String): TagMod = TagMod.AddProp("stopColor", value)
      def stopOpacity(value: String): TagMod = TagMod.AddProp("stopOpacity", value)
      def strikethroughPosition(value: String): TagMod = TagMod.AddProp("strikethroughPosition", value)
      def strikethroughThickness(value: String): TagMod = TagMod.AddProp("strikethroughThickness", value)
      def string(value: String): TagMod = TagMod.AddProp("string", value)
      def stroke(value: String): TagMod = TagMod.AddProp("stroke", value)
      def strokeDasharray(value: String): TagMod = TagMod.AddProp("strokeDasharray", value)
      def strokeDashoffset(value: String): TagMod = TagMod.AddProp("strokeDashoffset", value)
      def strokeLinecap(value: String): TagMod = TagMod.AddProp("strokeLinecap", value)
      def strokeLinejoin(value: String): TagMod = TagMod.AddProp("strokeLinejoin", value)
      def strokeMiterlimit(value: String): TagMod = TagMod.AddProp("strokeMiterlimit", value)
      def strokeOpacity(value: String): TagMod = TagMod.AddProp("strokeOpacity", value)
      def strokeWidth(value: String): TagMod = TagMod.AddProp("strokeWidth", value)
      def surfaceScale(value: String): TagMod = TagMod.AddProp("surfaceScale", value)
      def systemLanguage(value: String): TagMod = TagMod.AddProp("systemLanguage", value)
      def tableValues(value: String): TagMod = TagMod.AddProp("tableValues", value)
      def targetX(value: String): TagMod = TagMod.AddProp("targetX", value)
      def targetY(value: String): TagMod = TagMod.AddProp("targetY", value)
      def textAnchor(value: String): TagMod = TagMod.AddProp("textAnchor", value)
      def textDecoration(value: String): TagMod = TagMod.AddProp("textDecoration", value)
      def textLength(value: String): TagMod = TagMod.AddProp("textLength", value)
      def textRendering(value: String): TagMod = TagMod.AddProp("textRendering", value)
      def to(value: String): TagMod = TagMod.AddProp("to", value)
      def transform(value: String): TagMod = TagMod.AddProp("transform", value)
      def u1(value: String): TagMod = TagMod.AddProp("u1", value)
      def u2(value: String): TagMod = TagMod.AddProp("u2", value)
      def underlinePosition(value: String): TagMod = TagMod.AddProp("underlinePosition", value)
      def underlineThickness(value: String): TagMod = TagMod.AddProp("underlineThickness", value)
      def unicode(value: String): TagMod = TagMod.AddProp("unicode", value)
      def unicodeBidi(value: String): TagMod = TagMod.AddProp("unicodeBidi", value)
      def unicodeRange(value: String): TagMod = TagMod.AddProp("unicodeRange", value)
      def unitsPerEm(value: String): TagMod = TagMod.AddProp("unitsPerEm", value)
      def vAlphabetic(value: String): TagMod = TagMod.AddProp("vAlphabetic", value)
      def vHanging(value: String): TagMod = TagMod.AddProp("vHanging", value)
      def vIdeographic(value: String): TagMod = TagMod.AddProp("vIdeographic", value)
      def vMathematical(value: String): TagMod = TagMod.AddProp("vMathematical", value)
      def values(value: String): TagMod = TagMod.AddProp("values", value)
      def vectorEffect(value: String): TagMod = TagMod.AddProp("vectorEffect", value)
      def version(value: String): TagMod = TagMod.AddProp("version", value)
      def vertAdvY(value: String): TagMod = TagMod.AddProp("vertAdvY", value)
      def vertOriginX(value: String): TagMod = TagMod.AddProp("vertOriginX", value)
      def vertOriginY(value: String): TagMod = TagMod.AddProp("vertOriginY", value)
      def viewBox(value: String): TagMod = TagMod.AddProp("viewBox", value)
      def viewTarget(value: String): TagMod = TagMod.AddProp("viewTarget", value)
      def visibility(value: String): TagMod = TagMod.AddProp("visibility", value)
      def widths(value: String): TagMod = TagMod.AddProp("widths", value)
      def wordSpacing(value: String): TagMod = TagMod.AddProp("wordSpacing", value)
      def writingTagMode(value: String): TagMod = TagMod.AddProp("writingTagMode", value)
      def x(value: String): TagMod = TagMod.AddProp("x", value)
      def x1(value: String): TagMod = TagMod.AddProp("x1", value)
      def x2(value: String): TagMod = TagMod.AddProp("x2", value)
      def xChannelSelector(value: String): TagMod = TagMod.AddProp("xChannelSelector", value)
      def xHeight(value: String): TagMod = TagMod.AddProp("xHeight", value)
      def xlinkActuate(value: String): TagMod = TagMod.AddProp("xlinkActuate", value)
      def xlinkArcrole(value: String): TagMod = TagMod.AddProp("xlinkArcrole", value)
      def xlinkHref(value: String): TagMod = TagMod.AddProp("xlinkHref", value)
      def xlinkRole(value: String): TagMod = TagMod.AddProp("xlinkRole", value)
      def xlinkShow(value: String): TagMod = TagMod.AddProp("xlinkShow", value)
      def xlinkTitle(value: String): TagMod = TagMod.AddProp("xlinkTitle", value)
      def xlinkType(value: String): TagMod = TagMod.AddProp("xlinkType", value)
      def xmlBase(value: String): TagMod = TagMod.AddProp("xmlBase", value)
      def xmlLang(value: String): TagMod = TagMod.AddProp("xmlLang", value)
      def xmlSpace(value: String): TagMod = TagMod.AddProp("xmlSpace", value)
      def y(value: String): TagMod = TagMod.AddProp("y", value)
      def y1(value: String): TagMod = TagMod.AddProp("y1", value)
      def y2(value: String): TagMod = TagMod.AddProp("y2", value)
      def yChannelSelector(value: String): TagMod = TagMod.AddProp("yChannelSelector", value)
      def z(value: String): TagMod = TagMod.AddProp("z", value)
      def zoomAndPan(value: String): TagMod = TagMod.AddProp("zoomAndPan", value)

    }

  }

}
